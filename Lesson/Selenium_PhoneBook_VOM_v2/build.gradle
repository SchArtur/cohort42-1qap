plugins {
    id 'java'
    id("io.qameta.allure") version "2.12.0"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.testng:testng:7.10.2'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation 'org.seleniumhq.selenium:selenium-java:4.24.0'

    // https://mvnrepository.com/artifact/io.qameta.allure/allure-junit5
    implementation 'io.qameta.allure:allure-testng:2.29.0'

    //Что бы не смущало уведомление по slf4j
//    implementation 'org.slf4j:slf4j-nop:2.0.7'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.5.7'

}

test {
    useTestNG()

    if (project.hasProperty('browser')) {
        systemProperty('browser', "${browser}")
    }

    finalizedBy('allureReport')
}

//tasks.register('qa', Test){
//    useTestNG() {
//        suites('src/test/resources/smoke.xml')
//    }
//
//    if (project.hasProperty('browser')) {
//        systemProperty('browser', "${browser}")
//    }
//
//    finalizedBy('allureReport')
//}

def registerTask(String taskName, String path) {
    tasks.register(taskName, Test){
        useTestNG() {
            suites(path)
        }

        if (project.hasProperty('browser')) {
            systemProperty('browser', "${browser}")
        }

        finalizedBy('allureReport')
    }
}

registerTask('all', 'src/test/resources/testng.xml')
registerTask('smoke', 'src/test/resources/smoke.xml')


